name: Linting

on:
  pull_request:
    branches: [main]
    paths:
      - "**/*.yml"
      - "**/*.yaml"
      - "ansible/**"
      - "docker-compose.yml"
      - ".ansible-lint"
      - ".yamllint.yml"
  # Allows manual triggering
  workflow_dispatch:

jobs:
  ansible-lint:
    name: Ansible Lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Run ansible-lint
        uses: ansible/ansible-lint@main # or vX.X.X version
        # optional (see below):
        with:
          args: ""
          #gh_action_ref: "<version - e.g. `v25.5.0`>" # Not recommended for non-composite action use
          setup_python: "true"
          working_directory: ""
          requirements_file: ""

  yaml-lint:
    name: Yaml Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v3
      - run: echo ${{ steps.yaml-lint.outputs.logfile }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: yamllint-logfile
          path: ${{ steps.yaml-lint.outputs.logfile }}

  docker-compose-validate:
    name: Docker Compose Validation
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:28.3.3
        options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create dummy .env file
        run: |
          cat > .env << EOF
          PUBLIC_HOSTNAME=example.com
          PUID=1000
          PGID=1000
          TZ=UTC
          CF_DNS_API_TOKEN=dummy_token
          CF_ZONE_API_TOKEN=dummy_token
          TRAEFIK_BASIC_AUTH_USERNAME=dummy_user
          TRAEFIK_BASIC_AUTH_PASSWORD=dummy_password
          AUTHENTIK_POSTGRESQL__NAME=authentik
          AUTHENTIK_POSTGRESQL__PASSWORD=dummy_password
          AUTHENTIK_POSTGRESQL__USER=authentik
          AUTHENTIK_SECRET_KEY=dummy_key
          EOF
      - name: Validate docker-compose.yml
        run: docker-compose config
