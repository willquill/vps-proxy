name: Lint

on:
  # Allows manual triggering
  workflow_dispatch:
  push:

jobs:
  tofu-lint:
    name: OpenTofu Lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - tool: opentofu
            version: v1.10.5
            working_dir: opentofu
          - tool: opentofu
            version: v1.10.5
            working_dir: tfstate
    environment: hetzner-cloud
    env: # Required for tofu init
      # AWS keys for S3 state backend
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # To populate Terraform variables
      TF_VAR_repo_owner: ${{ github.repository_owner }}
      TF_VAR_ssh_authorized_key: ${{ secrets.VPS_PROXY_KEY }}
      tf_actions_working_dir: ${{ matrix.working_dir }}

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.tool }}-${{ matrix.version }}--${{ matrix.working_dir }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v5

      - if: matrix.tool == 'opentofu'
        name: OpenTofu fmt
        id: fmt
        run: tofu fmt -check
        continue-on-error: true
        # working-directory: ${{ matrix.working_dir }}

      - if: matrix.tool == 'opentofu'
        uses: ./.github/actions/opentofu-setup

      - if: matrix.tool == 'opentofu'
        name: OpenTofu Validate
        id: validate
        run: tofu validate
        # working-directory: ${{ matrix.working_dir }}

  # Disabled for now because I lint locally
  #   ansible-lint:
  #     name: Ansible Lint
  #     runs-on: ubuntu-24.04
  #     steps:
  #       - uses: actions/checkout@v5
  #       - name: Run ansible-lint
  #         uses: ansible/ansible-lint@main # or vX.X.X version
  #         # optional (see below):
  #         with:
  #           args: ""
  #           #gh_action_ref: "<version - e.g. `v25.5.0`>" # Not recommended for non-composite action use
  #           setup_python: "true"
  #           working_directory: ""
  #           requirements_file: ""

  #   yaml-lint:
  #     name: Yaml Lint
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v5
  #       - name: yaml-lint
  #         uses: ibiqlik/action-yamllint@v3
  #       - run: echo ${{ steps.yaml-lint.outputs.logfile }}
  #       - uses: actions/upload-artifact@v4
  #         if: always()
  #         with:
  #           name: yamllint-logfile
  #           path: ${{ steps.yaml-lint.outputs.logfile }}
