name: Plan

# permissions:
#   id-token: write
#   contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    # inputs:
    #   tps-url:
    #     description: "TPS endpoint URL"
    #     #required: true
    #     default: "https://api.hetzner.cloud/v1"
    #     type: string

jobs:
  plan-opentofu:
    runs-on: ubuntu-latest
    # permissions:
    #   # This is required so the pipeline can generate an oauth token.
    #   id-token: write
    env:
      HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}

    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir || 'terraform' }}

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.tool }}-${{ matrix.version }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        include:
          - tool: opentofu
            version: v1.10.x

    steps:
      - uses: actions/checkout@v5

      - if: matrix.tool == 'opentofu'
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ matrix.version }}
          tofu_wrapper: false

      # - name: Hetzner Cloud TPS
      #   uses: hetznercloud/tps-action@main
      #   with:
      #     token: ${{ secrets.HCLOUD_TOKEN  }}
      #     # tps-url: ${{ github.event.inputs.tps-url }}
      #   env:
      #     ACTIONS_ID_TOKEN_REQUEST_URL: ${{ env.ACTIONS_ID_TOKEN_REQUEST_URL || 'https://api.github.com/actions/oidc/token' }}

      # - uses: hetznercloud/setup-hcloud@v1
      # - # The action set the environment variable HCLOUD_TOKEN, so all
      #   # subsequent steps in the same job can use it.
      #   run: hcloud server-type list
      #   env:
      #     HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}

      # - name: Set up working directory
      #   run: |
      #     echo "tf_actions_working_dir=${{ github.workspace }}" >> $GITHUB_ENV

      - name: OpenTofu fmt
        id: fmt
        run: tofu fmt -check
        continue-on-error: true

      - name: OpenTofu Init
        id: init
        run: tofu init

      - name: OpenTofu Validate
        id: validate
        run: tofu validate

      - name: Check HCLOUD_TOKEN is set
        run: |
          if [ -z "${HCLOUD_TOKEN}" ]; then
            echo "HCLOUD_TOKEN is not set!"
            exit 1
          else
            echo "HCLOUD_TOKEN is set."
          fi

      - name: OpenTofu Plan
        id: plan
        run: tofu plan
        continue-on-error: true

      - run: echo ${{ steps.plan.outputs.stdout }}
      - run: echo ${{ steps.plan.outputs.stderr }}
      - run: echo ${{ steps.plan.outputs.exitcode }}

      # Post comment on PR
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "tofu\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### OpenTofu Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### OpenTofu Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### OpenTofu Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### OpenTofu Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
