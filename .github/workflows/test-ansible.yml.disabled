name: Functional Tests

on:
  pull_request:
    branches: [main]
    paths:
      - "ansible/**"
      - "docker-compose.yml"
      - ".github/workflows/functional.yml"
  # Allows manual triggering
  workflow_dispatch:

jobs:
  molecule:
    name: Ansible Playbook Dry Run
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - debian-12
          - debian-13
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: "${{ github.repository }}"
      - name: Molecule
        uses: gofrolist/molecule-action@v2
        with:
          molecule_options: --debug --base-config molecule/_shared/base.yml
          molecule_command: test
          molecule_args: --scenario-name ${{ matrix.scenario }}
        env:
          ANSIBLE_FORCE_COLOR: "1"

      - name: Create test inventory and vars
        run: |
          mkdir -p test
          # Create a test inventory
          cat > test/inventory << EOF
          [all]
          localhost ansible_connection=local
          EOF
          # Create test vars
          cat > test/vars.yml << EOF
          wireguard_port: 51820
          wireguard_interface: wg0
          wireguard_address: "192.168.145.1/24"
          wireguard_tunnel_subnet: "192.168.145.0/24"
          wireguard_peer1: "192.168.145.2/32"
          wireguard_private_key_path: "/tmp/wireguard/privatekey"
          wireguard_public_key_path: "/tmp/wireguard/publickey"
          wireguard_config_path: "/tmp/wireguard/wg0.conf"
          user_name: "testuser"
          user_id: 1000
          group_id: 1000
          repo_url: "https://github.com/willquill/vps-proxy.git"
          repo_dest: "/tmp/vps-proxy"
          traefik_username: "testuser"
          traefik_password: "testpass"
          acme_email: "test@example.com"
          public_hostname: "example.com"
          admin_ip_range: "192.168.1.0/24"
          authentik_postgresql_name: "authentik"
          authentik_postgresql_password: "testpass"
          authentik_postgresql_user: "authentik"
          authentik_secret_key: "testsecret"
          cf_dns_api_token: "testtoken"
          cf_zone_api_token: "testtoken"
          timezone: "UTC"
          EOF
      - name: Run Ansible in check mode
        run: |
          # Run with --check to simulate changes without making them
          ansible-playbook -i test/inventory -e "@test/vars.yml" --skip-tags "never" --check ansible/main.yml || echo "Dry run completed with warnings"
