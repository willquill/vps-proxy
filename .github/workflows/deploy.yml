name: Provision & Deploy VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  # Ansible will read these automatically if prefixed ANSIBLE_
  ANSIBLE_HOST_KEY_CHECKING: False
  ANSIBLE_FORCE_COLOR: 1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ---------- Checkout code ----------
      - name: Checkout repo
        uses: actions/checkout@v4

      # ---------- Setup tooling ----------
      - name: "Install Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: "Cache python packages"
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ inputs.version }}

      - name: "Install packages"
        shell: bash
        run: |
          python -m pip install ansible==${{ inputs.version}}
      - name: "Print Ansible version"
        run: ansible-playbook --version

      # ---------- Install Ansible Galaxy requirements ----------
      - name: Install Ansible Galaxy requirements
        run: |
          ansible-galaxy collection install -r ansible/galaxy-requirements.yml

      # ---------- SSH key ----------
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_PROXY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p 2222 -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      # ---------- Create inventory file ----------
      - name: Create inventory file
        run: |
          cat <<EOF > inventory
          [vps]
          ${{ secrets.VPS_HOST }} ansible_user=${{ secrets.VPS_USER }} ansible_port=2222
          EOF

      # ---------- Run Ansible ----------
      - name: Run ansible playbook
        run: |
          ansible-playbook \
            -i inventory \
            -e "ansible_ssh_private_key_file=~/.ssh/id_ed25519" \
            -e "repo_url=https://github.com/${{ github.repository }}.git" \
            -e "repo_dest=/home/${{ secrets.VPS_USER }}/vps-proxy" \
            -e "vps_host=${{ secrets.VPS_HOST }}" \
            -e "user_name=${{ secrets.VPS_USER }}" \
            -e "traefik_username=${{ secrets.TRAEFIK_BASIC_AUTH_USERNAME }}" \
            -e "traefik_password=${{ secrets.TRAEFIK_BASIC_AUTH_PASSWORD }}" \
            -e "acme_email=${{ secrets.ACME_EMAIL }}" \
            -e "public_hostname=${{ secrets.PUBLIC_HOSTNAME }}" \
            -e "admin_ip_range=${{ secrets.ADMIN_IP_RANGE }}" \
            -e "authentik_postgresql_name=${{ secrets.AUTHENTIK_POSTGRESQL__NAME }}" \
            -e "authentik_postgresql_password=${{ secrets.AUTHENTIK_POSTGRESQL__PASSWORD }}" \
            -e "authentik_postgresql_user=${{ secrets.AUTHENTIK_POSTGRESQL__USER }}" \
            -e "authentik_secret_key=${{ secrets.AUTHENTIK_SECRET_KEY }}" \
            -e "cf_dns_api_token=${{ secrets.CF_DNS_API_TOKEN }}" \
            -e "cf_zone_api_token=${{ secrets.CF_ZONE_API_TOKEN }}" \
            -e "timezone=${{ secrets.TZ }}" \
            ansible/main.yml
